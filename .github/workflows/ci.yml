name: Code CI

on:
  push:
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

jobs:
  build-and-run-examples:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:

    - name: Checkout V
      uses: actions/checkout@v2
      with:
        repository: vlang/v
    - name: Build local v
      run: make && sudo ./v symlink

    - name: Checkout jni
      uses: actions/checkout@v2
      with:
        path: jni

    - name: Link local jni folder in ~/.vmodules/jni
      run: |
        cd jni
        mkdir -p ~/.vmodules
        ln -s $(pwd) ~/.vmodules/jni
    - name: Test code formatting
      run: |
        cd jni
        v test-fmt

    - name: Run jni tests
      run: |
        cd jni
        v test .

    - name: Install and run V jni Desktop examples
      run: |
        cd jni
        JNI_HOME=$(pwd)
        export JAVA_HOME=$JAVA_HOME_11_X64
        # Test basic shell operation
        cd $JNI_HOME/examples/desktop/v_as_library
        export LD_LIBRARY_PATH=$(pwd):.
        v -cc gcc -cg  -shared libvlang.v
        javac io/vlang/V.java
        java io.vlang.V
        # Test build_and_run.vsh
        cd $JNI_HOME/examples/desktop/simple
        v run ./build_and_run.vsh

    - name: Checkout vab
      uses: actions/checkout@v2
      with:
        repository: vlang/vab
        path: vab

    - name: Build vab
      run: |
        cd vab
        v vab.v
        sudo ln -s $(pwd)/vab /usr/local/bin/vab

    - name: Build Android examples
      run: |
        cd vab
        declare -a jni_android_examples=('keyboard' 'toast')
        mkdir apks
        for example in "${jni_android_examples[@]}"; do
          safe_name=$(echo "$example" | sed 's%/%-%' | sed 's%\.%-%' )
          vab --api 29 --build-tools '29.0.0' -v 3 examples/$example -o apks/$safe_name.apk
        done
